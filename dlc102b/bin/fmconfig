#!/bin/sh
# Progress Management Framework Configuration utility
PROG=`basename $0`

# Verify that this script is being run by the root account.
id | egrep -s "^uid=0" > /dev/null
if [ $? != 0 ]
then
    echo
    echo "Only the root user can run fmconfig"
    echo
    exit 1
fi

# Change umask so files are created with group/other write access.
# This permits the adminserver to be started by non-root accounts.
umask 000

# Determine the correct directory where the Progress is
# installed from either the tailored name or existing value of $DLC.
for what_dlc in "$DLC" "/dlc/dlc102b"
do
    [ ! -d "${what_dlc}/java" ] && continue
    DLC=$what_dlc
    export DLC
    break
done

for what_fathominit in "$FATHOMINIT" "$DLC"/fathom.init.params
do
    [ ! -f "${what_fathominit}" ] && continue
    FATHOMINIT=$what_fathominit
    export FATHOMINIT
    break
done

FMCONFIGARGS="$@"

isEnableFunc=false
for ARG in "$@"
do
  case "$ARG" in
      -enable)
        isEnableFunc=true
        shift
        ;;
      *)
        shift
        ;;
  esac
done

requiresDisplay=false
if [ $isEnableFunc = "true" ]
then
    ret=`grep -i fathomEnabled $FATHOMINIT | grep false`
    if [ $? -eq 0 ]
    then
        isFathomEnabled=false
    else
        isFathomEnabled=true
    fi

    if [ $isFathomEnabled = "true" ]
    then
        requiresDisplay=true
    
        # Display needed on all Unix (including Linux PPC) 
        # Display is not needed for Linux 32/64
        if [ `uname` = "Linux" ] 
        then
            ret=`uname -a | grep ppc`
            if [ $? -eq 1 ]
            then
                requiresDisplay=false
            fi
        fi
    fi
fi

if [ $requiresDisplay = "true" ]
then
    if [ "x$DISPLAY" = "x" ]
    then
        echo "DISPLAY variable must be set"
        exit 1
    fi
fi

# Set the user working directory - this is a tailored value
for what_wrkdir in "$WRKDIR" "/dlc/wrk102b" "."
do
    [ ! -d "${what_wrkdir}" ] && continue
    WRKDIR=$what_wrkdir
    export WRKDIR
    break
done



# Set PROMSGS (if not set) add another others here
PROMSGS=${PROMSGS-$DLC/promsgs};                     export PROMSGS

# Set variable for fmconfig and the Java Starter
FMCONFIGCLASS=${FMCONFIGCLASS-ConfigurationTool}
FMCONFIGPKG=${FMCONFIGPKG-com.progress.mf.tools}

JVMSTRT=${JVMSTRT-$DLC/bin/jvmStart}

TOOLSPROP=${TOOLSPROP-$DLC/properties/JavaTools.properties}
TOOLSGRP=${TOOLSGRP-FMCONFIGCLI}

# In case TERM is not set to something, avoid a warning message.
TERM=ansi; export TERM

cat $DLC/version

# Set any environment variables below required to start java

# set the java environment
if [ ! -f $DLC/bin/java_env ]
then
    echo "Progress $PROG Messages:"
    echo
    echo "java_env could not be found."
    echo
    echo "JAVA environment not set correctly."
    echo "Progress DLC environment variable may not be set correctly."
    echo "Set DLC variable to Progress installation directory."
    echo
    echo "Progress DLC setting: $DLC"
    echo
    echo
    exit 1
fi

# Set the JAVA environment
. $DLC/bin/java_env

if [ ! -f $JREHOME/bin/$JVMEXE ]
then
    echo "Progress $PROG Messages:"
    echo
    echo "Java Virtual Machine could not be found."
    echo
    echo "JREHOME environment variable may not be set correctly."
    echo "Set JREHOME variable to a valid directory."
    echo
    echo "JREHOME setting: $JREHOME"
    echo
    exit 1
fi

# set the Progress shared lib  environment
if [ ! -f $DLC/bin/slib_env ]
then
    echo "Progress $PROG Messages:"
    echo
    echo "slib_env could not be found."
    echo
    echo "Progress shared library environment not set correctly."
    echo "Progress DLC environment variable may not be set correctly."
    echo "Set DLC variable to Progress installation directory."
    echo
    echo "Progress DLC setting: $DLC"
    echo
    echo
    exit 1
fi

# Set the Progress Shared lib environment
. $DLC/bin/slib_env

# make sure the working directory is real.
if [ ! -d $WRKDIR ]
then
    echo "Progress $PROG Messages:"
    echo
    echo "Working directory is invalid."
    echo
    echo "Progress WRKDIR environment variable may not be set correctly."
    echo "Set WRKDIR variable to a valid directory."
    echo
    echo "Progress WRKDIR setting: $WRKDIR"
    echo
    exit 1
fi

if [ ! -f $JVMSTRT ]
then
    echo "Progress $PROG Messages:"
    echo
    echo "Progress Java Server starter could not be found."
    echo
    echo "Progress DLC environment variable may not be set correctly."
    echo "Set DLC variable to Progress installation directory."
    echo
    echo "Progress DLC setting: $DLC"
    echo "Executable not found: $JVMSTRT"
    echo
    exit 1
fi

if [ ! -f $TOOLSPROP ]
then
    echo "Progress $PROG Messages:"
    echo
    echo "Progress tools property file could not be found."
    echo
    echo "Progress DLC environment variable may not be set correctly."
    echo "Set DLC variable to Progress installation directory."
    echo
    echo "Progress DLC setting: $DLC"
    echo "Executable not found: $TOOLSPROP"
    echo
    exit 1
fi

# at this point ALL required environment variable should be set
# invoke the database management utility
$JVMSTRT -w $WRKDIR -o stderr  -m silent -a $TOOLSPROP::$TOOLSGRP $JVM -DInstall.Dir=$DLC -DWork.Dir=$WRKDIR ${FMCONFIGPKG}.${FMCONFIGCLASS} $FMCONFIGARGS

EXITCODE=$?

unset FMCONFIGARGS FMCONFIGCLASS FMCONFIGPKG JVMSTRT XSDFILE

exit $EXITCODE

